{
  "spaceId": "8w44qojqirooq6ll",
  "appId": "default",
  "filePath": "src/App.tsx",
  "content": "import React, { useState } from 'react';\nimport { Rocket, Plus, TrendingUp, Users, DollarSign, Sparkles } from 'lucide-react';\nimport { CoinCreator } from './components/CoinCreator';\nimport { TradingMarket } from './components/TradingMarket';\nimport { Portfolio } from './components/Portfolio';\n\ninterface Coin {\n  id: string;\n  name: string;\n  symbol: string;\n  description: string;\n  image: string | null;\n  createdAt: string;\n  price: number;\n  change24h: number;\n  volume24h: number;\n  marketCap: number;\n  holders: number;\n}\n\ninterface Trade {\n  id: string;\n  coinId: string;\n  type: 'buy' | 'sell';\n  amount: number;\n  price: number;\n  timestamp: string;\n}\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState<'create' | 'trade' | 'portfolio'>('create');\n  const [coins, setCoins] = useState<Coin[]>([\n    {\n      id: '1',\n      name: 'MoonCoin',\n      symbol: 'MOON',\n      description: 'To the moon and beyond! ðŸš€',\n      image: null,\n      createdAt: '2024-01-15',\n      price: 0.0045,\n      change24h: 15.67,\n      volume24h: 125000,\n      marketCap: 450000,\n      holders: 1250\n    },\n    {\n      id: '2',\n      name: 'DiamondHands',\n      symbol: 'DIAMOND',\n      description: 'For true believers who never sell! ðŸ’Ž',\n      image: null,\n      createdAt: '2024-01-14',\n      price: 0.0089,\n      change24h: -3.21,\n      volume24h: 89000,\n      marketCap: 890000,\n      holders: 890\n    }\n  ]);\n  const [trades, setTrades] = useState<Trade[]>([]);\n  const [balance, setBalance] = useState(100); // SOL balance\n\n  const handleCreateCoin = (coinData: Omit<Coin, 'id' | 'createdAt' | 'price' | 'change24h' | 'volume24h' | 'marketCap' | 'holders'>) => {\n    const newCoin: Coin = {\n      ...coinData,\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString().split('T')[0],\n      price: 0.001, // Starting price\n      change24h: 0,\n      volume24h: 0,\n      marketCap: 1000, // Initial market cap\n      holders: 1\n    };\n    \n    setCoins(prev => [newCoin, ...prev]);\n    setActiveTab('trade');\n  };\n\n  const handleTrade = (coinId: string, type: 'buy' | 'sell', amount: number) => {\n    const coin = coins.find(c => c.id === coinId);\n    if (!coin) return;\n\n    const totalCost = amount * (type === 'buy' ? 1.02 : 0.98); // 2% fee\n    \n    if (type === 'buy' && totalCost > balance) {\n      alert('Insufficient balance!');\n      return;\n    }\n\n    const newTrade: Trade = {\n      id: Date.now().toString(),\n      coinId,\n      type,\n      amount,\n      price: coin.price,\n      timestamp: new Date().toISOString()\n    };\n\n    setTrades(prev => [newTrade, ...prev]);\n    \n    // Update balance\n    if (type === 'buy') {\n      setBalance(prev => prev - totalCost);\n    } else {\n      setBalance(prev => prev + totalCost);\n    }\n\n    // Update coin stats\n    setCoins(prev => prev.map(c => {\n      if (c.id === coinId) {\n        return {\n          ...c,\n          volume24h: c.volume24h + amount,\n          change24h: c.change24h + (Math.random() - 0.5) * 10, // Simulate price movement\n          holders: type === 'buy' ? c.holders + 1 : Math.max(1, c.holders - 1)\n        };\n      }\n      return c;\n    }));\n\n    alert(`Successfully ${type === 'buy' ? 'bought' : 'sold'} ${amount} SOL worth of ${coin.symbol}!`);\n  };\n\n  const stats = {\n    totalCoins: coins.length,\n    totalVolume: coins.reduce((sum, coin) => sum + coin.volume24h, 0),\n    totalMarketCap: coins.reduce((sum, coin) => sum + coin.marketCap, 0),\n    activeTraders: new Set(trades.map(t => t.coinId)).size\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\n      {/* Background Effects */}\n      <div className=\"absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cg fill=\"none\" fill-rule=\"evenodd\"%3E%3Cg fill=\"%239C92AC\" fill-opacity=\"0.1\"%3E%3Ccircle cx=\"30\" cy=\"30\" r=\"2\"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-20\"></div>\n      \n      <div className=\"relative z-10\">\n        {/* Header */}\n        <header className=\"border-b border-white/10 bg-black/20 backdrop-blur-sm\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between h-16\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\n                  <Rocket className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h1 className=\"text-2xl font-bold text-white\">CoinLaunch Pro</h1>\n                  <p className=\"text-sm text-gray-400\">Create & Trade Community Coins</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-6\">\n                <div className=\"text-right\">\n                  <p className=\"text-sm text-gray-400\">Your Balance</p>\n                  <p className=\"text-lg font-bold text-white\">{balance.toFixed(4)} SOL</p>\n                </div>\n                <div className=\"w-10 h-10 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center\">\n                  <DollarSign className=\"w-5 h-5 text-white\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Stats Bar */}\n        <div className=\"bg-black/10 backdrop-blur-sm border-b border-white/10\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center space-x-2\">\n                  <Sparkles className=\"w-5 h-5 text-purple-400\" />\n                  <div>\n                    <p className=\"text-2xl font-bold text-white\">{stats.totalCoins}</p>\n                    <p className=\"text-sm text-gray-400\">Total Coins</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center space-x-2\">\n                  <TrendingUp className=\"w-5 h-5 text-green-400\" />\n                  <div>\n                    <p className=\"text-2xl font-bold text-white\">${(stats.totalVolume / 1000).toFixed(1)}K</p>\n                    <p className=\"text-sm text-gray-400\">24h Volume</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center space-x-2\">\n                  <DollarSign className=\"w-5 h-5 text-blue-400\" />\n                  <div>\n                    <p className=\"text-2xl font-bold text-white\">${(stats.totalMarketCap / 1000).toFixed(1)}K</p>\n                    <p className=\"text-sm text-gray-400\">Market Cap</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center space-x-2\">\n                  <Users className=\"w-5 h-5 text-pink-400\" />\n                  <div>\n                    <p className=\"text-2xl font-bold text-white\">{stats.activeTraders}</p>\n                    <p className=\"text-sm text-gray-400\">Active Traders</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex space-x-1 bg-black/20 backdrop-blur-sm rounded-xl p-1 mb-8\">\n            <button\n              onClick={() => setActiveTab('create')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-all duration-200 ${\n                activeTab === 'create'\n                  ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-lg'\n                  : 'text-gray-400 hover:text-white hover:bg-white/5'\n              }`}\n            >\n              <Plus className=\"w-5 h-5\" />\n              <span>Create Coin</span>\n            </button>\n            <button\n              onClick={() => setActiveTab('trade')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-all duration-200 ${\n                activeTab === 'trade'\n                  ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-lg'\n                  : 'text-gray-400 hover:text-white hover:bg-white/5'\n              }`}\n            >\n              <TrendingUp className=\"w-5 h-5\" />\n              <span>Trade Market</span>\n            </button>\n            <button\n              onClick={() => setActiveTab('portfolio')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-all duration-200 ${\n                activeTab === 'portfolio'\n                  ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white shadow-lg'\n                  : 'text-gray-400 hover:text-white hover:bg-white/5'\n              }`}\n            >\n              <Users className=\"w-5 h-5\" />\n              <span>Portfolio</span>\n            </button>\n          </div>\n\n          {/* Content */}\n          <div className=\"space-y-8\">\n            {activeTab === 'create' && (\n              <CoinCreator onCreateCoin={handleCreateCoin} />\n            )}\n            \n            {activeTab === 'trade' && (\n              <TradingMarket coins={coins} onTrade={handleTrade} />\n            )}\n            \n            {activeTab === 'portfolio' && (\n              <Portfolio trades={trades} coins={coins} balance={balance} />\n            )}\n          </div>\n        </div>\n\n        {/* Footer */}\n        <footer className=\"mt-16 border-t border-white/10 bg-black/20 backdrop-blur-sm\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                <Rocket className=\"w-6 h-6 text-purple-400\" />\n                <span className=\"text-xl font-bold text-white\">CoinLaunch Pro</span>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                The premier platform for creating and trading community-driven cryptocurrencies\n              </p>\n              <div className=\"flex items-center justify-center space-x-6 text-sm text-gray-500\">\n                <span>ðŸ”’ Secure Trading</span>\n                <span>ðŸ’° 2% Platform Fee</span>\n                <span>ðŸš€ Instant Deployment</span>\n                <span>ðŸ“± Mobile Ready</span>\n              </div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"
}
