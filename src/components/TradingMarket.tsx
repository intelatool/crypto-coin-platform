{
  "spaceId": "8w44qojqirooq6ll",
  "appId": "default",
  "filePath": "src/components/TradingMarket.tsx",
  "content": "import React, { useState } from 'react';\nimport { TrendingUp, TrendingDown, ShoppingCart, DollarSign, BarChart3, Users } from 'lucide-react';\n\ninterface Coin {\n  id: string;\n  name: string;\n  symbol: string;\n  description: string;\n  image: string | null;\n  createdAt: string;\n  price: number;\n  change24h: number;\n  volume24h: number;\n  marketCap: number;\n  holders: number;\n}\n\ninterface TradingMarketProps {\n  coins: Coin[];\n  onTrade: (coinId: string, type: 'buy' | 'sell', amount: number) => void;\n}\n\nexport const TradingMarket: React.FC<TradingMarketProps> = ({ coins, onTrade }) => {\n  const [selectedCoin, setSelectedCoin] = useState<Coin | null>(null);\n  const [tradeAmount, setTradeAmount] = useState('');\n  const [tradeType, setTradeType] = useState<'buy' | 'sell'>('buy');\n  const [sortBy, setSortBy] = useState<'price' | 'volume' | 'change'>('volume');\n\n  const sortedCoins = [...coins].sort((a, b) => {\n    switch (sortBy) {\n      case 'price':\n        return b.price - a.price;\n      case 'volume':\n        return b.volume24h - a.volume24h;\n      case 'change':\n        return b.change24h - a.change24h;\n      default:\n        return 0;\n    }\n  });\n\n  const handleTrade = () => {\n    if (!selectedCoin || !tradeAmount) return;\n    \n    const amount = parseFloat(tradeAmount);\n    if (amount <= 0) return;\n\n    onTrade(selectedCoin.id, tradeType, amount);\n    setTradeAmount('');\n    setSelectedCoin(null);\n  };\n\n  const formatPrice = (price: number) => {\n    if (price < 0.01) return `$${price.toFixed(6)}`;\n    return `$${price.toFixed(4)}`;\n  };\n\n  const formatVolume = (volume: number) => {\n    if (volume >= 1000000) return `$${(volume / 1000000).toFixed(1)}M`;\n    if (volume >= 1000) return `$${(volume / 1000).toFixed(1)}K`;\n    return `$${volume.toFixed(0)}`;\n  };\n\n  return (\n    <div className=\"bg-black/20 backdrop-blur-sm rounded-xl border border-white/10 p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-10 h-10 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center\">\n            <BarChart3 className=\"w-5 h-5 text-white\" />\n          </div>\n          <div>\n            <h2 className=\"text-xl font-bold text-white\">Trading Market</h2>\n            <p className=\"text-gray-400 text-sm\">Buy and sell community coins</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <select\n            value={sortBy}\n            onChange={(e) => setSortBy(e.target.value as 'price' | 'volume' | 'change')}\n            className=\"bg-black/30 border border-white/10 rounded-lg px-3 py-2 text-white text-sm focus:outline-none focus:border-purple-500\"\n          >\n            <option value=\"volume\">Sort by Volume</option>\n            <option value=\"price\">Sort by Price</option>\n            <option value=\"change\">Sort by Change</option>\n          </select>\n        </div>\n      </div>\n\n      {coins.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <ShoppingCart className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-400 mb-2\">No Coins Available</h3>\n          <p className=\"text-gray-500\">Create the first coin to start trading!</p>\n        </div>\n      ) : (\n        <div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n            <div className=\"bg-black/30 rounded-lg border border-white/10 p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <TrendingUp className=\"w-5 h-5 text-green-400\" />\n                <div>\n                  <p className=\"text-sm text-gray-400\">Total Volume 24h</p>\n                  <p className=\"text-lg font-bold text-white\">\n                    {formatVolume(coins.reduce((sum, coin) => sum + coin.volume24h, 0))}\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-black/30 rounded-lg border border-white/10 p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <DollarSign className=\"w-5 h-5 text-blue-400\" />\n                <div>\n                  <p className=\"text-sm text-gray-400\">Total Market Cap</p>\n                  <p className=\"text-lg font-bold text-white\">\n                    {formatVolume(coins.reduce((sum, coin) => sum + coin.marketCap, 0))}\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-black/30 rounded-lg border border-white/10 p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Users className=\"w-5 h-5 text-purple-400\" />\n                <div>\n                  <p className=\"text-sm text-gray-400\">Active Coins</p>\n                  <p className=\"text-lg font-bold text-white\">{coins.length}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b border-white/10\">\n                  <th className=\"text-left py-3 px-2 text-gray-400 font-medium\">Coin</th>\n                  <th className=\"text-right py-3 px-2 text-gray-400 font-medium\">Price</th>\n                  <th className=\"text-right py-3 px-2 text-gray-400 font-medium\">24h Change</th>\n                  <th className=\"text-right py-3 px-2 text-gray-400 font-medium\">Volume</th>\n                  <th className=\"text-right py-3 px-2 text-gray-400 font-medium\">Market Cap</th>\n                  <th className=\"text-center py-3 px-2 text-gray-400 font-medium\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedCoins.map((coin) => (\n                  <tr key={coin.id} className=\"border-b border-white/5 hover:bg-white/5 transition-colors\">\n                    <td className=\"py-4 px-2\">\n                      <div className=\"flex items-center space-x-3\">\n                        {coin.image ? (\n                          <img\n                            src={coin.image}\n                            alt={coin.name}\n                            className=\"w-8 h-8 rounded-full object-cover\"\n                          />\n                        ) : (\n                          <div className=\"w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\n                            <span className=\"text-white font-bold text-sm\">\n                              {coin.symbol.charAt(0)}\n                            </span>\n                          </div>\n                        )}\n                        <div>\n                          <p className=\"font-medium text-white\">{coin.name}</p>\n                          <p className=\"text-gray-400 text-sm\">{coin.symbol}</p>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"py-4 px-2 text-right\">\n                      <p className=\"font-medium text-white\">{formatPrice(coin.price)}</p>\n                    </td>\n                    <td className=\"py-4 px-2 text-right\">\n                      <div className={`flex items-center justify-end space-x-1 ${\n                        coin.change24h >= 0 ? 'text-green-400' : 'text-red-400'\n                      }`}>\n                        {coin.change24h >= 0 ? (\n                          <TrendingUp className=\"w-4 h-4\" />\n                        ) : (\n                          <TrendingDown className=\"w-4 h-4\" />\n                        )}\n                        <span className=\"font-medium\">\n                          {coin.change24h >= 0 ? '+' : ''}{coin.change24h.toFixed(2)}%\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"py-4 px-2 text-right\">\n                      <p className=\"text-white\">{formatVolume(coin.volume24h)}</p>\n                    </td>\n                    <td className=\"py-4 px-2 text-right\">\n                      <p className=\"text-white\">{formatVolume(coin.marketCap)}</p>\n                    </td>\n                    <td className=\"py-4 px-2 text-center\">\n                      <button\n                        onClick={() => setSelectedCoin(coin)}\n                        className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200\"\n                      >\n                        Trade\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {selectedCoin && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div className=\"bg-gray-900 rounded-xl border border-white/10 p-6 max-w-md w-full mx-4\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-3\">\n                {selectedCoin.image ? (\n                  <img\n                    src={selectedCoin.image}\n                    alt={selectedCoin.name}\n                    className=\"w-10 h-10 rounded-full object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-bold\">\n                      {selectedCoin.symbol.charAt(0)}\n                    </span>\n                  </div>\n                )}\n                <div>\n                  <h3 className=\"text-lg font-bold text-white\">{selectedCoin.name}</h3>\n                  <p className=\"text-gray-400\">{formatPrice(selectedCoin.price)}</p>\n                </div>\n              </div>\n              <button\n                onClick={() => setSelectedCoin(null)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setTradeType('buy')}\n                  className={`flex-1 py-2 px-4 rounded-lg font-medium transition-colors ${\n                    tradeType === 'buy'\n                      ? 'bg-green-600 text-white'\n                      : 'bg-black/30 text-gray-400 hover:text-white'\n                  }`}\n                >\n                  Buy\n                </button>\n                <button\n                  onClick={() => setTradeType('sell')}\n                  className={`flex-1 py-2 px-4 rounded-lg font-medium transition-colors ${\n                    tradeType === 'sell'\n                      ? 'bg-red-600 text-white'\n                      : 'bg-black/30 text-gray-400 hover:text-white'\n                  }`}\n                >\n                  Sell\n                </button>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Amount (SOL)\n                </label>\n                <input\n                  type=\"number\"\n                  value={tradeAmount}\n                  onChange={(e) => setTradeAmount(e.target.value)}\n                  placeholder=\"0.00\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  className=\"w-full px-4 py-3 bg-black/30 border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500\"\n                />\n              </div>\n\n              <div className=\"bg-black/30 rounded-lg p-4\">\n                <div className=\"flex justify-between text-sm mb-2\">\n                  <span className=\"text-gray-400\">Trading Fee (2%):</span>\n                  <span className=\"text-white\">\n                    {tradeAmount ? (parseFloat(tradeAmount) * 0.02).toFixed(4) : '0.0000'} SOL\n                  </span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-gray-400\">You {tradeType === 'buy' ? 'pay' : 'receive'}:</span>\n                  <span className=\"text-white font-medium\">\n                    {tradeAmount ? (parseFloat(tradeAmount) * (tradeType === 'buy' ? 1.02 : 0.98)).toFixed(4) : '0.0000'} SOL\n                  </span>\n                </div>\n              </div>\n\n              <button\n                onClick={handleTrade}\n                disabled={!tradeAmount || parseFloat(tradeAmount) <= 0}\n                className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 disabled:from-gray-600 disabled:to-gray-600 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-200\"\n              >\n                {tradeType === 'buy' ? 'Buy' : 'Sell'} {selectedCoin.symbol}\n              </button>\n            </div>\n\n            <div className=\"mt-4 p-3 bg-purple-500/10 rounded-lg border border-purple-500/20\">\n              <p className=\"text-purple-300 text-sm\">\n                💰 <strong>Trading Fee:</strong> 2% goes to platform revenue\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};"
}
