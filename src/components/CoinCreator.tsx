{
  "spaceId": "8w44qojqirooq6ll",
  "appId": "default",
  "filePath": "src/components/CoinCreator.tsx",
  "content": "import React, { useState } from 'react';\nimport { Rocket, Upload, Sparkles, DollarSign } from 'lucide-react';\n\ninterface CoinCreatorProps {\n  onCreateCoin: (coinData: {\n    name: string;\n    symbol: string;\n    description: string;\n    image: string | null;\n  }) => void;\n}\n\nexport const CoinCreator: React.FC<CoinCreatorProps> = ({ onCreateCoin }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    symbol: '',\n    description: '',\n    image: null as string | null\n  });\n  const [isCreating, setIsCreating] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.name || !formData.symbol || !formData.description) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    if (formData.symbol.length > 10) {\n      alert('Symbol must be 10 characters or less');\n      return;\n    }\n\n    setIsCreating(true);\n    \n    // Simulate coin creation delay\n    setTimeout(() => {\n      onCreateCoin(formData);\n      setFormData({\n        name: '',\n        symbol: '',\n        description: '',\n        image: null\n      });\n      setIsCreating(false);\n    }, 2000);\n  };\n\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setFormData(prev => ({\n          ...prev,\n          image: e.target?.result as string\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <div className=\"bg-black/20 backdrop-blur-sm rounded-xl border border-white/10 p-8\">\n        <div className=\"text-center mb-8\">\n          <div className=\"w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <Rocket className=\"w-8 h-8 text-white\" />\n          </div>\n          <h2 className=\"text-3xl font-bold text-white mb-2\">Create Your Coin</h2>\n          <p className=\"text-gray-400\">Launch your own cryptocurrency in minutes</p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Coin Name */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Coin Name *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n              placeholder=\"e.g., MoonCoin\"\n              className=\"w-full px-4 py-3 bg-black/30 border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-1 focus:ring-purple-500\"\n              maxLength={50}\n            />\n          </div>\n\n          {/* Symbol */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Symbol *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.symbol}\n              onChange={(e) => setFormData(prev => ({ ...prev, symbol: e.target.value.toUpperCase() }))}\n              placeholder=\"e.g., MOON\"\n              className=\"w-full px-4 py-3 bg-black/30 border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-1 focus:ring-purple-500\"\n              maxLength={10}\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">Max 10 characters</p>\n          </div>\n\n          {/* Description */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Description *\n            </label>\n            <textarea\n              value={formData.description}\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              placeholder=\"Describe your coin's purpose and vision...\"\n              rows={4}\n              className=\"w-full px-4 py-3 bg-black/30 border border-white/10 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-1 focus:ring-purple-500 resize-none\"\n              maxLength={500}\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">{formData.description.length}/500 characters</p>\n          </div>\n\n          {/* Image Upload */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Coin Image (Optional)\n            </label>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex-1\">\n                <label className=\"flex items-center justify-center w-full px-4 py-3 bg-black/30 border border-white/10 rounded-lg text-gray-400 hover:text-white hover:border-purple-500 cursor-pointer transition-colors\">\n                  <Upload className=\"w-5 h-5 mr-2\" />\n                  <span>Upload Image</span>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageUpload}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n              {formData.image && (\n                <div className=\"w-16 h-16 rounded-lg overflow-hidden border border-white/10\">\n                  <img\n                    src={formData.image}\n                    alt=\"Coin preview\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Creation Cost */}\n          <div className=\"bg-purple-500/10 rounded-lg border border-purple-500/20 p-4\">\n            <div className=\"flex items-center space-x-3\">\n              <DollarSign className=\"w-6 h-6 text-purple-400\" />\n              <div>\n                <h3 className=\"font-medium text-white\">Creation Cost</h3>\n                <p className=\"text-sm text-gray-400\">0.1 SOL + Network Fees</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Features */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"bg-black/30 rounded-lg border border-white/10 p-4\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Sparkles className=\"w-5 h-5 text-yellow-400\" />\n                <h4 className=\"font-medium text-white\">Instant Launch</h4>\n              </div>\n              <p className=\"text-sm text-gray-400\">Your coin goes live immediately after creation</p>\n            </div>\n            \n            <div className=\"bg-black/30 rounded-lg border border-white/10 p-4\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <DollarSign className=\"w-5 h-5 text-green-400\" />\n                <h4 className=\"font-medium text-white\">Trading Ready</h4>\n              </div>\n              <p className=\"text-sm text-gray-400\">Automatically listed on our trading market</p>\n            </div>\n          </div>\n\n          {/* Submit Button */}\n          <button\n            type=\"submit\"\n            disabled={isCreating || !formData.name || !formData.symbol || !formData.description}\n            className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 disabled:from-gray-600 disabled:to-gray-600 text-white font-semibold py-4 px-6 rounded-lg transition-all duration-200 flex items-center justify-center space-x-2\"\n          >\n            {isCreating ? (\n              <>\n                <div className=\"w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                <span>Creating Coin...</span>\n              </>\n            ) : (\n              <>\n                <Rocket className=\"w-5 h-5\" />\n                <span>Launch Coin</span>\n              </>\n            )}\n          </button>\n\n          {isCreating && (\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-400\">\n                ðŸš€ Deploying your coin to the blockchain...\n              </p>\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};"
}
